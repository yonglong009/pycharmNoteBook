#以红色显示一句话：=======================================
$echo -e "\e[1;31m this is red text \e[0m"


#显示一个进程的环境变量:=======================================
mayl@Ubun15:~$ pgrep gedit
2284
mayl@Ubun15:~$ cat /proc/2284/environ | tr '\0' '\n'

#获得变量长度：=======================================
mayl@Ubun15:~$ var="mayonglong"
mayl@Ubun15:~$ echo ${#var}              #length=${#var}
10

##shell 算数运算：=======================================
mayl@Ubun15:~$ num1=5
mayl@Ubun15:~$ num2=6
mayl@Ubun15:~$ let res=num1 + num2
bash: let: +: syntax error: operand expected (error token is "+")
mayl@Ubun15:~$ let res=num1+num2
mayl@Ubun15:~$ echo $res
11

mayl@Ubun15:~$ echo "4 * 0.56"|bc
2.24

mayl@Ubun15:~$ no=54
mayl@Ubun15:~$ res=`echo "$no * 1.5"|bc`
mayl@Ubun15:~$ echo $res
81.0

mayl@Ubun15:~$ no=120
mayl@Ubun15:~$ bin=`echo "obase=2;$no"|bc`
mayl@Ubun15:~$ echo $bin
1111000
mayl@Ubun15:~$ echo "obase=10;ibase=2;$bin"|bc
120
mayl@Ubun15:~$ echo "sqrt(100)"|bc
10
mayl@Ubun15:~$ echo "10^10"|bc
10000000000
mayl@Ubun15:~$ 

#shell脚本向log文件中写入隔断信息=======================================
#!/bin/bash
cat<<EOF >./pingall.log
==========Date...========== pingall.log -> logheader <-
EOF

#计算时间间隔=====================================================
start=$(date +%s)
	...do somethings...
edn=$(date +%s)
diffsec=$((end - start))
echo "use $diffsec seconds."



#什么是子shell （subshell）=======================================
cmd_output=$(commands)
  #子shell本身是独立的进程，用（）定义一个子shell。
  #通过subshell和反命令 可以将一些命令的输出保存到变量中。
cmd-output=`commands`
#=====================subshell hack:
$find . -name "*.sh" -print > files.txt
$cat files.txt | ( while read arg; do cat $arg; done)
	#do...done 可以是多条命令

#shell 脚本逻辑控制技巧=======================================
[ condition ] && action;  #condition=true ,执行action 
[ condition ] || action;  #condition=false，执行action


#shell命令录制于回放===================================
mayl@Ubun15:~/bash_box$ script -t 2> timing.log -a output.session
mayl@Ubun15:~/bash_box$ scriptreplay timing.log output.session  #回放

  #实时管道播放：
	term1:					term2(s):
		mkfifo scriptfifo    			cat scriptfifo
		script -f scriptfifo
		commands
		exit


#====================find====================
#搜索两类文件：
mayl@Ubun15:~/bash_box$ find . \( -name "*.py" -o -name "*.sh" \) -print
#正则表达式匹配
mayl@Ubun15:~/bash_box$ find . -regex ".*\(\.py\|\.sh\)$"
#限定文件搜索深度：仅在当前目录下查找，不进入子目录。
mayl@Ubun15:~/bash_box$ find . -maxdepth 1 -type f -print
#查找没有设置好权限的php文件
find . -type f -name "*.php" ! -perm 755 -print
#全部文件易主：
find . -type f -user root -exec chown mayl {} \;

#------------ find 与 xargs
#-下面的命令使用-print是危险的， xargs -0 代表将\0作为定界符。
find . -type f -name "*.txt" -print0 | xargs -0 rm -f
#-统计c源代码目录中所有程序行数
find src_dir -type f -name "*.c" -print0 | xargs -0 wc -l
mayl@Ubun15:~/bash_box$ find . -name "*.sh" -print0 |xargs -0 wc -l
  42 ./backup_gen.sh
   0 ./haha.sh
  15 ./pingall.sh
  34 ./menu.sh
  12 ./setnu.sh
  33 ./del_empty_lines.sh
 136 total
mayl@Ubun15:~/bash_box$ 


#===================================================
#tr 删除字符补集
mayl@Ubun15:~/bash_box$ echo hello 1 world 2 python 4 | tr -d -c '0-9 \n'
 1  2  4
#tr 压缩空白符
echo "GUN     is not   unix."|tr -s ' '

#tr 数字域相加：
mayl@Ubun15:~/bash_box$ cat sum.txt 
1 : 3
2:5
4: 7
mayl@Ubun15:~/bash_box$ cat sum.txt |awk -F: '{print $1}'
1 
2
4
mayl@Ubun15:~/bash_box$ cat sum.txt |awk -F: '{print $1}'|echo $[$(tr '\n' '+') 0]
7
mayl@Ubun15:~/bash_box$ 

##=================================================MD5SUM 校验和=======
mayl@Ubun15:~/bash_box$ md5sum vv_s_link >vv.md5
mayl@Ubun15:~/bash_box$ cat vv.md5 
b41c8b2e729b471def7072949533e150  vv_s_link
mayl@Ubun15:~/bash_box$ md5sum -c vv.md5 
vv_s_link: OK
mayl@Ubun15:~/bash_box$ 


##=====================================分解文件名，前缀 后缀===============
mayl@Ubun15:~/bash_box$ url="www.baidu.com"
mayl@Ubun15:~/bash_box$ echo ${url%.*}
www.baidu
mayl@Ubun15:~/bash_box$ echo ${url%%.*}
www
mayl@Ubun15:~/bash_box$ echo ${url#*.}
baidu.com
mayl@Ubun15:~/bash_box$ echo ${url##*.}
com
##---------------------------------------------将文件名中的空格替换为下划线：
$find path -type f -exec rename 's/ /_/g' {} \;
##---------------------------------------------讲所有MP3转移到指定目录：
$find path -type f -name "*.mp3" -exec mv {} target_dir \;

