cron (crontab)系统调度进程。
     可以使用它在每天的非高峰负荷时间段运行作业,或在一周或一月中的不同时段运行。
at 命令。使用它在一个特定的时间运行一些特殊的作业,或在晚一些的非负荷高峰时间段或高峰负荷时间段运行。
& 使用它在后台运行一个占用时间不长的进程。
	command >out.file 2>&1 &
nohup 使用它在后台运行一个命令,即使在用户退出时也不受影响。
	nohup command >>out.file 2>&1 &
#===========================================================================
cron是系统主要的调度进程,可以在无需人工干预的情况下运行作业。有一个叫做
crontab的命令允许用户提交、编辑或删除相应的作业。每一个用户都可以有自己的crontab文件,
但在一个较大的系统中,系统管理员一般会禁止这些文件,而只在整个系统保留一个这样的文件。
系统管理员是通过cron.deny和cron.allow这两个文件来禁止或允许用户拥有自己的crontab文件。
crontab:  "-"可表示一个时间段，如1-5（周1至周5）， ","表示时间点。 "*"代表所有时间段。
第1列 分钟1~59
第2列 小时1~23(0表示子夜)
第3列 日1~31
第4列 月1~12
第5列 星期0~6(0表示星期天)
第6列 要运行的命令
#------------------------------------
下面是crontab的格式:   
分<>时<>日<>月<>星期<>要运行的命令
其中<>表示空格。
#------------------------------------
crontab命令的一般形式为:
crontab [-u user] -e -l -r
其中:
-u 用户名。
-e 编辑crontab文件。
-l 列出crontab文件中的内容。
-r 删除crontab文件。
#------------------------------------
这里有cron t ab文件条目的一些例子:
30 21* * * /apps/bin/cleanup.sh
上面的例子表示每晚的 2 1: 30运行/ ap ps / bin目录下的c l ea nu p.sh。
45 4 1,10,22 * * /apps/bin/backup.sh
上面的例子表示每月 1、10、2 2日的4 :4 5运行/a pp s/b i n目录下的ba ck up .s h。
10 1 * * 6,0 /bin/find -name "core" -exec rm {} \;
上面的例子表示每周六、周日的 1 : 10运行一个fin d命令。
0,30 18-23 * * * /apps/bin/dbcheck.sh
上面的例子表示在每天 1 8:0 0至23:0 0之间每隔30分钟运行/ ap ps / bin目录下的db ch eck. sh。
0 23 * * 6 /apps/bin/qtrend.sh
上面的例子表示每星期六的 11:0 0p m运行/app s /b i n目录下的q t re nd .s h。
#------------------------------------
新系统创建cron
vim $HOME/.profile
     +EDITOR=vi;export EDITOR
:wq
编辑一个<user>cron文件添加任务，然后挂在cron， $crontab <user>cron
/var/spool/cron/<user>
#------------------------------------


